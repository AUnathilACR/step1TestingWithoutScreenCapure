<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-11T12:32:50 IST" name="Suite" finished-at="2021-04-11T12:33:12 IST" duration-ms="21735">
    <groups>
    </groups>
    <test started-at="2021-04-11T12:32:50 IST" name="Test" finished-at="2021-04-11T12:33:12 IST" duration-ms="21735">
      <class name="testClass.CICIPagesInvalidUser">
        <test-method signature="initializeInValidUser()[pri:4, instance:testClass.CICIPagesInvalidUser@51c693d]" started-at="2021-04-11T12:32:56 IST" name="initializeInValidUser" finished-at="2021-04-11T12:32:58 IST" duration-ms="1985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeInValidUser -->
        <test-method signature="InValidUser(java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:testClass.CICIPagesInvalidUser@51c693d]" started-at="2021-04-11T12:32:58 IST" name="InValidUser" data-provider="getData" finished-at="2021-04-11T12:33:00 IST" duration-ms="1649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[auwrgnaswgwgthil@acr.org]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gifrggtofgod@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid user1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InValidUser -->
        <test-method signature="tearDownInValidUser()[pri:6, instance:testClass.CICIPagesInvalidUser@51c693d]" started-at="2021-04-11T12:33:00 IST" name="tearDownInValidUser" finished-at="2021-04-11T12:33:00 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownInValidUser -->
      </class> <!-- testClass.CICIPagesInvalidUser -->
      <class name="testClass.CICEPagesValidUser">
        <test-method signature="initializeValidUser()[pri:1, instance:testClass.CICEPagesValidUser@6a57ae10]" started-at="2021-04-11T12:33:00 IST" name="initializeValidUser" finished-at="2021-04-11T12:33:01 IST" duration-ms="1440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeValidUser -->
        <test-method signature="ValidUser(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testClass.CICEPagesValidUser@6a57ae10]" started-at="2021-04-11T12:33:01 IST" name="ValidUser" data-provider="getData" finished-at="2021-04-11T12:33:12 IST" duration-ms="10216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user_1_regular_attendee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Giftofgod@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidUser -->
        <test-method signature="tearDownValidUser()[pri:3, instance:testClass.CICEPagesValidUser@6a57ae10]" started-at="2021-04-11T12:33:12 IST" name="tearDownValidUser" finished-at="2021-04-11T12:33:12 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownValidUser -->
      </class> <!-- testClass.CICEPagesValidUser -->
      <class name="testClass.ValidateFields">
        <test-method is-config="true" signature="initializeValidateFieldes()[pri:0, instance:testClass.ValidateFields@7b7fdc8]" started-at="2021-04-11T12:32:50 IST" name="initializeValidateFieldes" finished-at="2021-04-11T12:32:56 IST" duration-ms="6044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeValidateFieldes -->
        <test-method signature="ValidateField()[pri:0, instance:testClass.ValidateFields@7b7fdc8]" started-at="2021-04-11T12:32:56 IST" name="ValidateField" finished-at="2021-04-11T12:32:56 IST" duration-ms="97" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ACR 2022 rANNUAL MEETING] but found [ACR 2022 ANNUAL MEETING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ACR 2022 rANNUAL MEETING] but found [ACR 2022 ANNUAL MEETING]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testClass.ValidateFields.ValidateField(ValidateFields.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateField -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testClass.ValidateFields@7b7fdc8]" started-at="2021-04-11T12:33:12 IST" name="teardown" finished-at="2021-04-11T12:33:12 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testClass.ValidateFields -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
